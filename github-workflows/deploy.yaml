
name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

permissions:
  contents: read
  id-token: 'write'

jobs:

  deploy:

    name: Deploy
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version
        id: version
        run: echo VERSION=sha-$(git rev-parse --short HEAD) >> $GITHUB_OUTPUT

      - name: Extract metadata for container
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: contact-svc
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Log in to the container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Containerfile

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: projects/12312312313/locations/global/workloadIdentityPools/deploy/providers/github-deploy
          service_account: deploy@example-corp.iam.gserviceaccount.com
          access_token_lifetime: 600s
          create_credentials_file: true

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: europe-west1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Install Pulumi
        run: cd pulumi && npm install

      - name: Applying infrastructure üöÄüôè
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: prod
          work-dir: pulumi
          cloud-url: gs://example-corp-deploy/contact-svc
        env:
          PULUMI_CONFIG_PASSPHRASE: ""
          IMAGE_VERSION: ${{ steps.version.outputs.VERSION }}
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
